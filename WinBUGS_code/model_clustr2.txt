model {
	for (k in 1:K){
		Y[k] ~ dgamma(a[k], b)
		a[k] <- mu[k] * b
		log(mu[k]) <- inprod(X[k,], beta[]) + Z[k] * alp[i[k]] + u[i[k]]
	}
	
	for (k in 1:n_clust){
		u[k] ~ dnorm(m1[k], tau_u)
		alp[k] ~ dnorm(m2[k], tau_a)
		
		m1[k] <- nu1[1] + nu1[2] * W1[k] + nu1[3] * W2[k] + nu1[4] * W3[k] + nu1_c[W_clust[k]]
		m2[k] <- nu2[1] + nu2[2] * W1[k] + nu2[3] * W2[k] + nu2[4] * W3[k] + nu2_c[W_clust[k]]
	}
	
	#Noise cities
	nu1_c[1] <- 0
	nu2_c[1] <- 0 

	for (k in 2:n2_clust){
		nu1_c[k] ~ dnorm(0, tau_nu1)
		nu2_c[k] ~ dnorm(0, tau_nu2)
	}
	
	#Prior
	beta[1:3] ~ dmnorm(mu_b[], tau_b[,])
	nu1[1:4] ~ dmnorm(mu_nu[], tau_nu[,])
	nu2[1:4] ~ dmnorm(mu_nu[], tau_nu[,])
	
	tau_a ~ dgamma(2, 0.01)
	tau_u ~ dgamma(2, 0.01)
	tau_nu1 ~ dgamma(2, 0.01)
	tau_nu2 ~ dgamma(2, 0.01)
	b ~ dgamma(2, 1)
	
	sig_a <- 1/ sqrt(tau_a)
	sig_u <- 1/ sqrt(tau_u)
	sig_nu1 <- 1/sqrt(tau_nu1)
	sig_nu2 <- 1/sqrt(tau_nu2)
}
	
